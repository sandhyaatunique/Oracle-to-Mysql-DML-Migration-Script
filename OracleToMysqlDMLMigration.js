/*
	Title - Oracle to Mysql DML migration script
	Version 1.0

	//Alogirthm explianed
	Step 1: Look for simplest sub problem or query 
	Step 2: Get the start and end position of the query and get a list of all sub problems
	Step 3: Loop through sub problem 
	Step 4: Convert each sub query to its equivalent mysql format
	Step 5: Add some random code in sub query position of same length 
	Setp 6: Repeat step 3 until all sub problems are converted
	Step 7: Stop


*/

/*
	Set the input data here 
*/
//var inputQuery="SELECT LTRIM(NVL(SELECT FAUFNR FROM LDB1_CAUFV_HDR,'N'),'0'),NVL(FCHARG,'N') AS BATCH FROM LDB1_CAUFV_HDR";
//var inputQuery =" SELECT B.* FROM ( SELECT A.* FROM (  SELECT LTRIM(S.FSAMPLELABELNUM,'0') AS FSAMPLELABELNUM,S.FVORNR,S.FAUFNR,S.FSTATUS,LTRIM(PO.FMATNR,0) AS FMATNR,M.FIDHDESC,M.FECCODE  ,S.FSAMPLE_SUBTYPE,PO.FTOTALQTY,PO.FMEINS,PO.FCHARG,PL.FPLINE,PR.FRESOURCECODE,S.FSAMPLEDATE,S.FSAMPLETIME  ,S.FHANDOVER_DATE,S.FHANDOVER_TIME,S.FSAMPLEREC_DATE,S.FSAMPLEREC_TIME ,S.FSAMPLEENDDATE,S.FSAMPLEENDTIME,S.FSAMPLE_START_DATE,SP.FPHASENAME,S.FUPDATEDBY,PO.FPARTIAL_RELEASE_STATUS,  FISARCHIEVED AS IS_ARCHIVE  FROM LDB1_SAMPLE_LABELS S  INNER JOIN LDB1_PRESBPHASE PP ON S.FAUFNR=PP.FAUFNR AND PP.FPHASETYPE='B' AND PP.FVORNR=S.FVORNR AND PP.FSITEID=S.FSITEID  INNER JOIN LDB1_PRODUCTIONLINERESOURCE PR ON DECODE(NVL(PP.FPHASERESOURCE,'N'),'N',S.FMANFCATEGORY,PP.FPHASERESOURCE)=PR.FRESOURCECODE AND PR.FSITEID=S.FSITEID AND PR.FSTATUS='A'  INNER JOIN LDB1_PLANTPRODUCTIONLINE PL ON PL.FPLINEID=PR.FPLINEID AND PL.FSITEID=PR.FSITEID AND PL.FSTATUS='A'  INNER JOIN LDB1_CAUFV_HDR PO ON PO.FAUFNR=S.FAUFNR AND PL.FSITEID=PO.FSITEID AND NVL(PO.FDELIND,'A')='A'  INNER JOIN LDB1_SITEPLANT T ON T.FSAPPLANTCODE=PO.FWERKS AND T.FSITEID=S.FSITEID  INNER JOIN LDB1_PLANTMATERIAL M ON M.FIDHID=PO.FMATNR AND M.FSITEID=S.FSITEID AND M.FSTATUS='A'  INNER JOIN LDB1_USERPLINE UP ON UP.FPLINEID=PL.FPLINEID AND UP.FUSERID=:USERID  LEFT OUTER JOIN LDB1_USERINFO U ON U.FUSERID=S.FOPERATOR AND U.FSTATUS='A'  LEFT OUTER JOIN LDB1_USERINFO UR ON UR.FUSERID=S.FUPDATEDBY AND UR.FSTATUS='A'  LEFT OUTER JOIN LDB1_USERINFO UA ON UA.FUSERID=S.FQCOPERATOR AND UA.FSTATUS='A'  LEFT OUTER JOIN LDB1_SOPPHASEINSTRUCTION SP ON PO.FSOPID=SP.FSOPID AND PO.FSOPGROUPID=SP.FGROUPID AND PP.FVORNR=SP.FPHASENUMBER AND SP.FSTATUS='A'  WHERE S.FSITEID =:SITEID AND NVL(S.FTYPE,'N') = 'N' AND S.FSTATUS<>'X'  AND S.FSAMPLEDATE BETWEEN :STARTDATE AND :ENDDATE  UNION  SELECT LTRIM(S.FSAMPLELABELNUM,'0') AS FSAMPLELABELNUM,S.FVORNR,S.FAUFNR,S.FSTATUS,LTRIM(PO.FMATNR,0) AS FMATNR,M.FIDHDESC,M.FECCODE  ,S.FSAMPLE_SUBTYPE,PO.FTOTALQTY,PO.FMEINS,PO.FCHARG,PL.FPLINE,PR.FRESOURCECODE,S.FSAMPLEDATE,S.FSAMPLETIME  ,S.FHANDOVER_DATE,S.FHANDOVER_TIME,S.FSAMPLEREC_DATE,S.FSAMPLEREC_TIME, S.FSAMPLEENDDATE,S.FSAMPLEENDTIME,S.FSAMPLE_START_DATE,SP.FPHASENAME,S.FUPDATEDBY,PO.FPARTIAL_RELEASE_STATUS,  'Y' AS IS_ARCHIVE  FROM LDB1_SAMPLE_LABELS_ARCH S  INNER JOIN LDB1_PRESBPHASE_ARCH PP ON S.FAUFNR=PP.FAUFNR AND PP.FPHASETYPE='B' AND PP.FVORNR=S.FVORNR AND PP.FSITEID=S.FSITEID  INNER JOIN LDB1_PRODUCTIONLINERESOURCE PR ON DECODE(NVL(PP.FPHASERESOURCE,'N'),'N',S.FMANFCATEGORY,PP.FPHASERESOURCE)=PR.FRESOURCECODE AND PR.FSITEID=S.FSITEID AND PR.FSTATUS='A'  INNER JOIN LDB1_PLANTPRODUCTIONLINE PL ON PL.FPLINEID=PR.FPLINEID AND PL.FSITEID=PR.FSITEID AND PL.FSTATUS='A'  INNER JOIN LDB1_CAUFV_HDR_ARCH PO ON PO.FAUFNR=S.FAUFNR AND PL.FSITEID=PO.FSITEID AND NVL(PO.FDELIND,'A')='A'  INNER JOIN LDB1_SITEPLANT T ON T.FSAPPLANTCODE=PO.FWERKS AND T.FSITEID=S.FSITEID  INNER JOIN LDB1_PLANTMATERIAL M ON M.FIDHID=PO.FMATNR AND M.FSITEID=S.FSITEID AND M.FSTATUS='A'  INNER JOIN LDB1_USERPLINE UP ON UP.FPLINEID=PL.FPLINEID AND UP.FUSERID=:USERID  LEFT OUTER JOIN LDB1_USERINFO U ON U.FUSERID=S.FOPERATOR AND U.FSTATUS='A'  LEFT OUTER JOIN LDB1_USERINFO UR ON UR.FUSERID=S.FUPDATEDBY AND UR.FSTATUS='A'  LEFT OUTER JOIN LDB1_USERINFO UA ON UA.FUSERID=S.FQCOPERATOR AND UA.FSTATUS='A'  LEFT OUTER JOIN LDB1_SOPPHASEINSTRUCTION SP ON PO.FSOPID=SP.FSOPID AND PO.FSOPGROUPID=SP.FGROUPID AND PP.FVORNR=SP.FPHASENUMBER AND SP.FSTATUS='A'  WHERE S.FSITEID =:SITEID AND NVL(S.FTYPE,'N') = 'N' AND S.FSTATUS<>'X'  AND S.FSAMPLEDATE BETWEEN :STARTDATE AND :ENDDATE  ) A  ORDER BY  DECODE(A.FSAMPLEENDDATE,0,1,2) ASC , DECODE(A.FHANDOVER_DATE, 0, DECODE(A.FSAMPLEREC_DATE, 0, A.FSAMPLEDATE, A.FSAMPLEREC_DATE), A.FHANDOVER_DATE) DESC,  DECODE(A.FHANDOVER_TIME, 0, DECODE(A.FSAMPLEREC_TIME, 0, A.FSAMPLETIME, A.FSAMPLEREC_TIME), A.FHANDOVER_TIME) DESC,A.FSAMPLEENDTIME DESC  )B";
//var inputQuery=" SELECT P.FAUFNR,P.FAUART,P.FCHARG,P.FMEINS,NVL(P.FTOTALQTY,0) AS FTOTALQTY,LTRIM(P.FMATNR,'0') AS FMATNR,M.FIDHDESC,NVL(P.FHDRSTATUS,'N') AS FHDRSTATUS  ,DECODE(NVL(P.FPLINEID,0),0, NVL(PL.FPLINEID ,0),P.FPLINEID)  AS FPLINEID  ,DECODE(NVL(POPL.FPLINE,'E'),'E', NVL(PL.FPLINE,''),NVL(POPL.FPLINE,'')) AS FPLINE  ,P.FPREWEIGHSCHDLDATE,P.FPREWEIGHSCHDTIME,P.FSCHDLDATE ,P.FSCHDLTIME,P.FPLANNEDDATE,P.FPLANNEDTIME  ,P.FMANFPLANNEDDATE,P.FMANFPLANNEDTIME,P.FPREWEIGHACTSTRDATE,P.FPREWEIGHACTFINDATE,P.FMANFACTSTARTDATE,P.FMANFACTFINISHDATE,P.FSTARTDATE AS FSAP_STARTDATE  ,P.FFINISHDATE AS FSAP_FINISHDATE,FSTARTTIME,FFINISHTIME,M.FECCODE,DECODE(NVL(P.FMPAUFNR,'E'),'E',P.FPAUFNR,P.FMPAUFNR) AS FBULKORDER ,DECODE(NVL(POPL.FPWORKSHOP,'E'),'E', PL.FPWORKSHOP,POPL.FPWORKSHOP ) AS FPWORKSHOP  ,DECODE(NVL(P.FMANFCATEGORY,'E'),'E',P.FCATEGORY,P.FMANFCATEGORY) AS FRESOURCECODE  ,P.FISSPECIALBATCH,NVL(P.FSOPID,0) AS FSOPID,NVL(FSOPGROUPID,0) AS FSOPGROUPID,P.FPRODUCTION_NOTES,ST.FAVAILABLESTOCKUPDATEDDATETIME,NVL(P.FCATEGORY,'') AS FCATEGORY,SO.FTYPE  ,(NVL(OP1.FLASTNAME, ' ') || ' ' || OP1.FFIRSTNAME) AS FPRODUCTION_OPERATOR1, (NVL(OP2.FLASTNAME, ' ') || ' ' || OP2.FFIRSTNAME) AS FPRODUCTION_OPERATOR2  ,P.FPRODUCTION_OPERATOR1_ID,P.FPRODUCTION_OPERATOR2_ID,M.FSPECIALBULK_FG,M.FSPECIALBULK_IND_VALIDITY,M.FSPECIALBULK_IND_CNT,P.FRESYNCREQUIRED  ,(SELECT COUNT(FAUFNR) FROM LDB1_PO_RMSHORTAGEINFO WHERE FAUFNR=P.FAUFNR AND FSITEID=:SITEID ) AS FHASRMSHORTAGE  ,P.FPARTIAL_RELEASE_STATUS,PRA.FVALUE AS FPARTIALRELEASEQTY,NVL(P.FDELIND,'A') AS DELIND  ,P.FTOTALULLAGEQTY,P.FTOTALFINISHEDQTY,P.FFG_PARTQTY,P.FMANHOUR,P.FMACHINEHOUR,(NVL(MFS.FLASTNAME, ' ') || ' ' || MFS.FFIRSTNAME) AS FMANUFACTURE_STARTED_BY  FROM LDB1_CAUFV_HDR P  INNER JOIN LDB1_SITEPLANT T ON T.FSAPPLANTCODE=P.FWERKS AND T.FSTATUS ='A' AND T.FSITEID=P.FSITEID  INNER JOIN LDB1_SITEORDERTYPE SO ON SO.FSAPORDERTYPE=P.FAUART AND SO.FSITEID=P.FSITEID AND SO.FSTATUS='A'  INNER JOIN LDB1_PLANTMATERIAL M ON M.FIDHID= P.FMATNR AND M.FSITEID=P.FSITEID AND M.FSTATUS='A'  LEFT OUTER JOIN LDB1_PLANTPRODUCTIONLINE POPL ON POPL.FPLINEID = P.FPLINEID AND POPL.FSITEID = P.FSITEID  LEFT OUTER JOIN LDB1_PRODUCTIONLINERESOURCE PR ON  PR.FSITEID=P.FSITEID AND PR.FRESOURCECODE=DECODE(NVL(P.FMANFCATEGORY,'E'),'E',P.FCATEGORY,P.FMANFCATEGORY) AND PR.FSTATUS='A'  LEFT OUTER JOIN LDB1_PLANTPRODUCTIONLINE PL ON PL.FPLINEID =PR.FPLINEID AND PL.FSITEID =P.FSITEID AND PL.FSTATUS='A' LEFT OUTER JOIN LDB1_USERINFO OP1 ON P.FPRODUCTION_OPERATOR1_ID = OP1.FUSERID AND P.FSITEID = OP1.FSITEID LEFT OUTER JOIN LDB1_USERINFO OP2 ON P.FPRODUCTION_OPERATOR2_ID = OP2.FUSERID AND P.FSITEID = OP2.FSITEID LEFT OUTER JOIN LDB1_USERINFO MFS ON P.FMANFSTARTUSER = MFS.FUSERID AND P.FSITEID = MFS.FSITEID LEFT OUTER JOIN LDB1_SYNCTIME ST ON ST.FSITEID=P.FSITEID  LEFT OUTER JOIN LDB1_ORDER_ADDITIONALINFO PRA ON PRA.FORDER_NUMBER=P.FAUFNR AND PRA.FCATEGORY='PARTIAL_RELEASE_INFO' AND PRA.FTYPE = 'QUANTITY' WHERE P.FSITEID=:SITEID  AND (NVL(PL.FPLINEID,0)=0 OR DECODE(NVL(P.FPLINEID,0),0, NVL(PL.FPLINEID ,0),P.FPLINEID) IN (:USERPLINEID0,:USERPLINEID1,:USERPLINEID2,:USERPLINEID3,:USERPLINEID4,:USERPLINEID5,:USERPLINEID6,:USERPLINEID7,:USERPLINEID8,:USERPLINEID9))  AND ( NVL(P.FDELIND,'A') = 'A' OR (NVL(P.FDELIND,'A') = 'I') AND P.FHDRSTATUS='E')  AND DECODE(P.FPREWEIGHSCHDLDATE,0,(DECODE(P.FPLANNEDDATE,0,P.FSTARTDATE,P.FPLANNEDDATE)),P.FPREWEIGHSCHDLDATE) BETWEEN :STARTDATE AND :ENDDATE ORDER BY  DECODE(P.FPLANNEDDATE, 0, P.FSTARTDATE, P.FPLANNEDDATE) ,DECODE(P.FPLANNEDDATE, 0, P.FSTARTTIME, P.FPLANNEDTIME) ";
var inputQuery="SELECT DECODE(NVL(LTRIM(FAUFNR,0),0),0,FCHARG,FAUFNR) FROM LDB1_CAUFV_HDR";

//var inputQuery=" SELECT P.FAUFNR,P.FCHARG,LTRIM(P.FMATNR,'0') AS FMATNR,M.FECCODE,M.FIDHDESC AS FIDHDESC,P.FPREPRODUCTIONNOTES  ,NVL(P.FHDRSTATUS,'N') AS FHDRSTATUS,S.FTYPE AS FPOORDERTYPE,PR.FISWORKRESOURCE  ,PR.FRESOURCEID,PR.FRESOURCECODE AS FCATEGORY  ,DECODE(P.FSCHDLDATE,0,(DECODE(P.FMANFPLANNEDDATE,0,P.FSTARTDATE,P.FMANFPLANNEDDATE)),P.FSCHDLDATE) AS FSCHDLDATE,P.FTOTALQTY,P.FMEINS  FROM LDB1_CAUFV_HDR P INNER JOIN LDB1_PLANTMATERIAL M ON M.FIDHID = P.FMATNR AND M.FSITEID=:SITEID AND M.FSTATUS='A'   INNER JOIN LDB1_SITEORDERTYPE S ON S.FSAPORDERTYPE = P.FAUART AND S.FSITEID=P.FSITEID AND S.FSITEID=M.FSITEID  INNER JOIN LDB1_SITEPLANT T ON T.FSAPPLANTCODE=P.FWERKS AND T.FSITEID=S.FSITEID  INNER JOIN LDB1_PRESBPHASE PP ON PP.FAUFNR = P.FAUFNR AND PP.FSITEID = P.FSITEID AND ((  PP.FPHASESTATUS NOT IN ('N','C','R')  AND ((:RESOURCECODE = PP.FPHASERESOURCE AND PP.FPHASERESOURCE IS NOT NULL)  OR (:RESOURCECODE = DECODE(NVL(P.FMANFCATEGORY,'N'),'N',P.FCATEGORY,P.FMANFCATEGORY) AND PP.FPHASERESOURCE IS NULL) ) )   OR (PP.FPHASESTATUS = 'N' AND :RESOURCECODE IN (SELECT SR.FPHASERESOURCE FROM LDB1_SOPRESOURCES SR INNER JOIN  LDB1_SOPPHASEINSTRUCTION SI ON SI.FSOPID=SR.FSOPID AND SI.FGROUPID=SR.FGROUPID   AND SI.FPHASEITEMNUMBER=SR.FPHASELINEITEMNUMBER AND SR.FLINEITEMNUMBER=0 AND NVL(SI.FNOTMACHINERELEVANT,'N')='N'  WHERE SI.FSOPID=P.FSOPID AND SI.FGROUPID=P.FSOPGROUPID AND SI.FPHASENUMBER=PP.FVORNR))  OR (PP.FPHASESTATUS = 'N' AND :RESOURCECODE = NVL(PP.FPHASERESOURCE,'N')  OR (PP.FPHASESTATUS = 'N' AND :RESOURCECODE = DECODE(NVL(P.FMANFCATEGORY,'N'),'N',P.FCATEGORY,P.FMANFCATEGORY))  OR (PP.FPHASESTATUS = 'N' AND :RESOURCECODE IN (SELECT SR.FPHASERESOURCE FROM LDB1_SOPLABHEADER SL INNER JOIN  LDB1_SOPLABPHASEINSTRUCTION SI ON SL.FSOPID=SI.FSOPID AND NVL(SI.FNOTMACHINERELEVANT,'N')='N' AND SI.FSTATUS='A'  INNER JOIN LDB1_SOPLABPHASERESOURCE SR ON SI.FSOPID=SR.FSOPID AND SI.FPHASEITEMNUMBER=SR.FPHASELINEITEMNUMBER AND SR.FLINEITEMNUMBER=0 AND SR.FSTATUS ='A'  WHERE SL.FAUFNR=P.FAUFNR AND SI.FPHASENUMBER=PP.FVORNR AND SL.FTYPE='B' AND SL.FSTATUS ='A' ))   )) INNER JOIN LDB1_PRODUCTIONLINERESOURCE PR ON PR.FSTATUS = 'A' AND PR.FSITEID=P.FSITEID  AND DECODE(NVL(PP.FPHASERESOURCE,'N'),'N',:RESOURCECODE,PP.FPHASERESOURCE) = PR.FRESOURCECODE   INNER JOIN LDB1_PLANTPRODUCTIONLINE PL ON PR.FPLINEID=PL.FPLINEID AND PL.FSTATUS='A' AND PL.FSITEID=M.FSITEID AND PL.FSITEID = PR.FSITEID  INNER JOIN LDB1_USERPLINE UP ON UP.FPLINEID = PL.FPLINEID AND UP.FUSERID=:USERID  WHERE P.FSITEID=:SITEID AND DECODE(P.FSCHDLDATE,0,(DECODE(P.FMANFPLANNEDDATE,0,P.FSTARTDATE,P.FMANFPLANNEDDATE)),P.FSCHDLDATE) =:CURRENTDATE  AND (S.FTYPE ='B' OR S.FTYPE ='R' OR PR.FISWORKRESOURCE ='Y')  AND NVL(P.FHDRSTATUS,'N') NOT IN ('N','W','I','E','C','P','O','F','Z','X')  AND PR.FRESOURCECODE =:RESOURCECODE  ORDER BY DECODE(P.FSCHDLTIME,0,(DECODE(P.FMANFPLANNEDTIME,0,P.FSTARTTIME,P.FMANFPLANNEDTIME)),P.FSCHDLTIME),P.FAUFNR ";
//var inputQuery="  SELECT H.FSOPID,H.FSOPGROUPID,P.FVORNR,P.FPHASETYPE,P.FPHASESTATUS,P.FPREWEIGHPICK,P.FPHASESTARTDATE,P.FPHASESTARTTIME,PR.FRESOURCECODE,PR.FRESOURCEID  ,PI.FPHASEITEMNUMBER,PI.FPHASENAME,PI.FCYCLETIME,PI.FQTYBASEDCYCLETIME,PI.FSTDQTY,PI.FQTYUOM,PI.FNOTMACHINERELEVANT,'N' AS FISLABADDITION,P.FPHASERESOURCE  ,H.FTOTALQTY,H.FMEINS,LTRIM(H.FMATNR,'0') AS FMATNR,PI.FPHASENUMBER,H.FHDRSTATUS  ,(UPPER(NVL(U.FLASTNAME,'')) || ' ' || UPPER(U.FFIRSTNAME))  AS PHASESTARTUSER  FROM LDB1_CAUFV_HDR H  INNER JOIN LDB1_SOPPHASEINSTRUCTION PI ON PI.FSOPID=H.FSOPID AND PI.FGROUPID=H.FSOPGROUPID AND PI.FSTATUS='A' AND PI.FPHASETYPE='M'  INNER JOIN LDB1_PRESBPHASE P ON P.FAUFNR=H.FAUFNR AND PI.FPHASENUMBER=P.FVORNR AND P.FPHASETYPE=:PHASETYPE AND P.FSITEID=H.FSITEID AND P.FPHASESTATUS NOT IN('C','R')  LEFT OUTER JOIN LDB1_PRODUCTIONLINERESOURCE PR ON PR.FSITEID=H.FSITEID AND PR.FRESOURCECODE=DECODE(NVL(P.FPHASERESOURCE,'N'),'N',DECODE(NVL(H.FMANFCATEGORY,'E'),'E',H.FCATEGORY,H.FMANFCATEGORY),P.FPHASERESOURCE) AND PR.FSTATUS='A'  LEFT OUTER JOIN LDB1_USERINFO U ON P.FOPERATOR=U.FUSERID  WHERE H.FAUFNR=:AUFNR AND H.FSITEID=:SITEID  UNION  SELECT H.FSOPID,H.FSOPGROUPID,P.FVORNR,P.FPHASETYPE,P.FPHASESTATUS,P.FPREWEIGHPICK,P.FPHASESTARTDATE,P.FPHASESTARTTIME,PR.FRESOURCECODE,PR.FRESOURCEID  ,LP.FPHASEITEMNUMBER,LP.FPHASENAME,LP.FCYCLETIME,LP.FQTYBASEDCYCLETIME,LP.FSTDQTY,LP.FQTYUOM,LP.FNOTMACHINERELEVANT,'Y' AS FISLABADDITION,P.FPHASERESOURCE  ,H.FTOTALQTY,H.FMEINS,LTRIM(H.FMATNR,'0') AS FMATNR,LP.FPHASENUMBER,H.FHDRSTATUS  ,(UPPER(NVL(U.FLASTNAME,'')) || ' ' || UPPER(U.FFIRSTNAME))  AS PHASESTARTUSER  FROM LDB1_CAUFV_HDR H  INNER JOIN LDB1_PRESBPHASE P ON P.FAUFNR=H.FAUFNR AND P.FPHASETYPE=:PHASETYPE AND P.FSITEID=H.FSITEID AND P.FPHASESTATUS NOT IN('C','R')  INNER JOIN LDB1_SOPLABHEADER L ON L.FAUFNR=H.FAUFNR AND L.FTYPE='B' AND L.FSTATUS='A' AND L.FSITEID=H.FSITEID  INNER JOIN LDB1_SOPLABPHASEINSTRUCTION LP ON LP.FSOPID=L.FSOPID AND LP.FPHASENUMBER=P.FVORNR AND LP.FSTATUS='A'  LEFT OUTER JOIN LDB1_PRODUCTIONLINERESOURCE PR ON PR.FSITEID=H.FSITEID AND PR.FRESOURCECODE=DECODE(NVL(P.FPHASERESOURCE,'N'),'N',DECODE(NVL(H.FMANFCATEGORY,'E'),'E',H.FCATEGORY,H.FMANFCATEGORY),P.FPHASERESOURCE) AND PR.FSTATUS='A'  LEFT OUTER JOIN LDB1_USERINFO U ON P.FOPERATOR=U.FUSERID  WHERE H.FAUFNR=:AUFNR AND H.FSITEID=:SITEID ";
//var inputQuery="   SELECT LTRIM(H.FMATNR,'0') AS FMATNR,H.FCHARG,H.FTOTALQTY,H.FMEINS,NVL(H.FHDRSTATUS,'E') AS FHDRSTATUS,H.FSOPID,H.FSOPGROUPID  ,H.FPICKSTATUS,H.FKITSTATUS,H.FRECIPEGROUP,H.FRECIPE,H.FALTBOM,INITCAP(TRIM(M.FIDHDESC)) AS FIDHDESC,H.FPRODUCTION_NOTES,S.FSAMESOPFORALL  ,S.FSOPID AS FBULKSOPID,PR1.FRESOURCECODE AS FHDRRESOURCE,PR1.FRESOURCEID AS FHDRRESOURCEID,NVL(PP.FPHASESTATUS,'N') AS FPHASESTATUS  ,PP.FVORNR,PR2.FRESOURCECODE AS FPHASERESOURCE,PR2.FRESOURCEID AS FPHASERESOURCEID,S.FSOPVERSION,PI.FINSTRUCTION  ,PL.FSHOW_PHASEINSTR_ON_PHASESTART,PL.FKITFROMSUPPLYAREA,M.FIDHDESC,M.FECCODE,PL.FALLOW_CONFIRM_LESS_MIX_QTY,PL.FALLOW_CONFIRM_MORE_MIX_QTY,PC.FCONFIG_VALUE  ,PP.FIS_PHASEINFO_SENT_TO_DCS,PL.FDCS_IDENTIFIER  ,(SELECT DISTINCT NVL(SG.FRECIPETYPE,'N') AS FRECIPETYPE FROM LDB1_SOPGROUPINFO SG  WHERE SG.FSOPID=DECODE(NVL(H.FSOPID,0),0,:SOPID,H.FSOPID) AND SG.FGROUPID=DECODE(NVL(H.FSOPGROUPID,0),0,:SOPGROUPID,H.FSOPGROUPID)) AS FRECIPETYPE    FROM LDB1_CAUFV_HDR H  INNER JOIN LDB1_PLANTMATERIAL M ON M.FIDHID=H.FMATNR AND M.FSITEID=H.FSITEID AND M.FSTATUS='A'  INNER JOIN LDB1_SOPHEADER S ON S.FIDHID=H.FMATNR AND S.FSITEID=H.FSITEID AND S.FSOPID=DECODE(NVL(H.FSOPID,0),0,:SOPID,H.FSOPID)  LEFT OUTER JOIN LDB1_PRODUCTIONLINERESOURCE PR1 ON PR1.FSITEID=H.FSITEID  AND PR1.FRESOURCECODE=DECODE(NVL(H.FMANFCATEGORY,'E'),'E',H.FCATEGORY,H.FMANFCATEGORY) AND PR1.FSTATUS='A'  LEFT OUTER JOIN LDB1_PLANTPRODUCTIONLINE PL ON PR1.FSITEID=PL.FSITEID AND PR1.FPLINEID=PL.FPLINEID AND PL.FSTATUS='A'  LEFT OUTER JOIN LDB1_PRESBPHASE PP ON PP.FAUFNR=H.FAUFNR AND PP.FVORNR=:VORNR AND PP.FSITEID=H.FSITEID  LEFT OUTER JOIN LDB1_PRODUCTIONLINERESOURCE PR2 ON PR2.FSITEID=H.FSITEID AND PR2.FRESOURCECODE=NVL(PP.FPHASERESOURCE,'N') AND PR2.FSTATUS='A'  LEFT OUTER JOIN LDB1_PO_PHASE_INSTRUCTION PI ON H.FSITEID=PI.FSITEID AND H.FAUFNR=PI.FAUFNR AND PI.FOPERATION_NUMBER=:VORNR  LEFT OUTER JOIN LDB1_ADDITIONAL_PLANTCONFIG PC ON PC.FSITEID=H.FSITEID AND PC.FCONFIG_TYPE='ALLOW_SCAN_LABEL_DIRECT_PIPELINE_MAT' AND PC.FCATEGORY='PRODUCTION_GENERAL_SETTINGS'  WHERE H.FAUFNR=:AUFNR AND H.FSITEID=:SITEID ";
//var inputQuery="  SELECT P.FREPLENISHMENTNUM,LTRIM(P.FMATNR,'0') AS FMATNR,INITCAP(TRIM(M.FIDHDESC)) AS FIDHDESC,P.FTYPE,P.FQTY,P.FPLINEID,L.FSUPPLYBIN   FROM LDB1_MAT_REPLENISHMENT P INNER JOIN LDB1_PLANTMATERIAL M ON M.FIDHID = P.FMATNR AND P.FSITEID=M.FSITEID AND M.FSTATUS='A'   INNER JOIN LDB1_PLANTPRODUCTIONLINE L ON L.FPLINEID=P.FPLINEID AND L.FSITEID=P.FSITEID AND L.FSTATUS='A'  WHERE P.FSITEID=:SITEID AND P.FREQUESTDATE >= :REPLENISHMENT_DATE AND P.FSTATUS='A'  ORDER BY P.FPLINEID,P.FREPLENISHMENTNUM ";
//var inputQuery="  SELECT P.FMATNR,M.FIDHDESC,M.FECCODE,P.FBATCH,P.FAUFNR,P.FPACKSIZE,P.FTOTALQTY AS FEXTRAPICKEDQTY,P.FRESERVEDQTY,P.FCONFIRMEDQTY,P.FUNIT  ,P.FSUPPLYBIN,P.FRECEIVE_DATE,P.FRECEIVE_TIME,P.FLINEITEM,P.FTOTALQTY,NVL(P.FTYPE,'E') AS FTYPE,P.FSTAGING_ORDER,P.FEXTRAQTY_ID, NVL(NS.FALERT_MAT_PROD_REM_HRS,0) AS FALERT_MAT_PROD_REM_HRS  FROM LDB1_POEXTRAQTY_INFO P  INNER JOIN LDB1_PLANTMATERIAL M ON M.FSITEID=P.FSITEID AND M.FIDHID=P.FMATNR AND M.FSTATUS='A'  LEFT OUTER JOIN LDB1_NOSTAGE_MATERIALS NS ON M.FSITEID=NS.FSITEID AND M.FIDHID=NS.FMATERIAL AND NS.FSTATUS='A'  WHERE P.FSITEID=:SITEID  AND (P.FTOTALQTY - P.FCONFIRMEDQTY) > 0  ORDER BY  P.FTIMESTAMP DESC ";

/*
	Declaring global variables and constants
*/

const oracleBuiltInFuncList=["NVL","LTRIM","DECODE","SUM","ROUND","LPAD","TO_DATE","TO_CHAR","INITCAP"];
const maxOracleFuncLength=7;
let outputQuery="";
var customKeywordArray=[];
var bracketCollectionArray=[];
var customKeywordObj={};

function getConversionFormat(value){
	var arr=value.split("(");
	var funcName=arr[0];
	
	if(funcName.length>0)
	{
		var arrParam=arr[1].replaceAll(")",'').split(",");

		arrParam.forEach(function(data,index){
			customKeywordArray.forEach(function(d,i){
				arrParam[index]=arrParam[index].replace(d,customKeywordObj[d]);
			});	
		});

		if(funcName=="LTRIM"){
			if(arrParam.length < 1){
				return false;
			}
			else if(arrParam[0].length>0 && arrParam[1].length>0){
				return "TRIM(LEADING "+arrParam[1]+" FROM "+arrParam[0]+")";
			}	
			else if(arrParam[0].length>0){
				return "LTRIM("+arrParam[0]+")";
			}	
		}
		else if(funcName=="NVL"){
			if(arrParam.length < 2){
				return false;
			}
			else if(arrParam[0].length>0 && arrParam[1].length>0){
				return "IFNULL("+arrParam[0]+","+arrParam[1]+")";
			}		
		}
		else if(funcName=="SUM"){
			if(arrParam.length < 1){
				return false;
			}
			else if(arrParam[0].length>0){
				return "SUM("+arrParam[0]+")";
			}
		}
		else if(funcName=="ROUND"){
			if(arrParam.length < 2){
				return false;
			}
			else if(arrParam[0].length>0 && arrParam[1].length>0){
				return "ROUND("+arrParam[0]+","+arrParam[1]+")";
			}	
		}
		else if(funcName=="TO_DATE"){
			if(arrParam.length < 2){
				return false;
			}
			else if(arrParam[0].length>0 && arrParam[1].length>0){
				return "STR_TO_DATE("+arrParam[0]+","+arrParam[1]+")";
			}	
		}
		else if(funcName=="TO_CHAR"){
			if(arrParam.length < 2){
				return false;
			}
			else if(arrParam[0].length>0 && arrParam[1].length>0){
				return "DATE_FORMAT("+arrParam[0]+","+arrParam[1]+")";
			}	
		}
		else if(funcName=="LPAD"){
			if(arrParam.length < 3){
				return false;
			}
			else if(arrParam[0].length>0 && arrParam[1].length>0 && arrParam[2].length>0){
				return "LPAD("+arrParam[0]+","+arrParam[1]+","+arrParam[2]+")";
			}	
		}
		else if(funcName=="INITCAP"){
			if(arrParam.length < 1){
				return false;
			}
			else if(arrParam[0].length>0){
				return "CONCAT(UPPER(SUBSTRING("+arrParam[0]+",1,1)),LOWER(SUBSTRING("+arrParam[0]+",2)))";
			}	
		}
		else if(funcName=="DECODE"){
			if(arrParam.length < 4){
				return false;
			}
			else if(arrParam[0].length>0 && arrParam[1].length>0 && arrParam[2].length>0 && arrParam[3].length>0){
				return "CASE WHEN "+arrParam[0]+" = "+arrParam[1]+" THEN "+arrParam[2]+" ELSE "+arrParam[3]+" END";
			}	
		}

	}
	else{
		var arrParam=arr[1].replaceAll(")",'').split(",");
		var convertedValue="";

		if(arrParam.length==1){
			customKeywordArray.forEach(function(data,index){
				arrParam[0]=arrParam[0].replace(data,customKeywordObj[data]);
			});

			convertedValue=arrParam[0];
		}
		else{
			arrParam.forEach(function(data,index){
				customKeywordArray.forEach(function(d,i){
					arrParam[index]=arrParam[index].replace(d,customKeywordObj[d]);
				});	

				if(convertedValue.length>0){
					convertedValue=convertedValue+","+arrParam[index];
				}	
				else{
					convertedValue=arrParam[index];
				}				
			});
		}

		return "("+convertedValue+")";
	}
}

function oracleToMysqlConversion(query,index){
	if(index==-1){
		customKeywordArray.forEach(function(data,index){
			query=query.replace(data,customKeywordObj[data]);
		});		
		outputQuery=query;
		return;
	}
	else{
		var startPos=bracketCollectionArray[index].start;
		var endPos=bracketCollectionArray[index].end;

		var customKeyword=getRandomString(endPos - startPos + 1);
		var convertedValue=getConversionFormat(query.substring(startPos,endPos + 1));

		if(convertedValue == false ){
				console.log(" Error : Given query is invalid ");
				customKeywordArray=[];
				return;
		}
		else{
			query=query.substring(0,startPos) + customKeyword + query.substring(endPos + 1,query.length);

			customKeywordObj[customKeyword]=convertedValue;
			customKeywordArray.push(customKeyword);

			oracleToMysqlConversion(query,index-1);
		}
	}
}

function getRandomString(limit) {
  var text = "";
  var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

  for (var i = 0; i <limit; i++)
    text += possible.charAt(Math.floor(Math.random() * possible.length));

  return text;
}

function identifyStartPosition(startPosVal){
	for(var i=maxOracleFuncLength;i>=0;i--){
		var funcName=inputQuery.substring(startPosVal-i,startPosVal);

		if(oracleBuiltInFuncList.includes(funcName)){
			startPosVal=startPosVal-i;
			break; 
		}		
	}
	return startPosVal;
}

function setEndPositionValue(endPosVal,index){	
	if(bracketCollectionArray[index].end==-1){
		bracketCollectionArray[index].end=endPosVal;
		return;
	}
	else{
		setEndPositionValue(endPosVal,index-1);
	}				
}

function getBracketCollectionArray(){
	var charr='';

	for(var i=0;i<inputQuery.length;i++){
		charr=inputQuery[i].toString();

		if(charr=="("){
			bracketCollectionArray.push({start:identifyStartPosition(i),end:-1});
		}
		else if(charr==")"){
			setEndPositionValue(i,bracketCollectionArray.length-1);
		}
	}

	//check query is invalid
	customKeywordArray.forEach(function (data) {
	    if(data.end==-1){	    	
	    	return false;
	    }
	});
	return true;
}

function doBasicConversion(){
	 inputQuery=inputQuery.replaceAll(":","?")
	.replaceAll("AND ROWNUM="," LIMIT ")
	.replaceAll("WHERE ROWNUM="," LIMIT ")
	.replaceAll(" ROWNUM="," LIMIT ")
	.replaceAll("WHERE ROWNUM<="," LIMIT ")
	.replaceAll("YYYYMMDD", "%Y%m%d")
	.replaceAll("yyyymmdd", "%Y%m%d")
	.replaceAll("HH24MISS", "%H%i%s")
	.replaceAll("hh24miSS", "%H%i%s")
	.replaceAll("SYSDATE", "SYSDATE()");
}


function oracleToMysqlDMLMigration(){
	if(inputQuery.length > 0)
	{
		console.log(" Input : "+inputQuery);

		doBasicConversion();

		if(getBracketCollectionArray()){
			oracleToMysqlConversion(inputQuery,bracketCollectionArray.length-1);
			if(outputQuery.length >0 )
				console.log(" Output : "+outputQuery);
		}
		else
		{
			console.log(" Error : Given query is invalid ");
		}
	}
	else
	{
		console.log(" Error : Given query is empty ");
	}	
}

/*
	Main method starts here
*/

oracleToMysqlDMLMigration();
